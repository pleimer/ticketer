#!/usr/bin/env python3

# the schema generated by the entoas extension is invalid for orval. Adjust here

import json

def adjust_openapi_schema(schema):
    # Adjust response objects in components
    if 'components' in schema and 'responses' in schema['components']:
        new_responses = {}
        for key, value in schema['components']['responses'].items():
            if key[0].isdigit():
                new_key = f"resp{key}"
            else:
                new_key = key
            new_responses[new_key] = value
        schema['components']['responses'] = new_responses

    # Update references in paths
    if 'paths' in schema:
        for path in schema['paths'].values():
            for method in path.values():
                if 'responses' in method:
                    for response_code, response in method['responses'].items():
                        if '$ref' in response:
                            parts = response['$ref'].split('/')
                            if parts[-1].isdigit():
                                parts[-1] = f"resp{parts[-1]}"
                                response['$ref'] = '/'.join(parts)

    return schema

# Read the JSON file
with open('tickets_broken.json', 'r') as file:
    schema = json.load(file)

# Adjust the schema
adjusted_schema = adjust_openapi_schema(schema)

# Write the adjusted schema back to a file
with open('tickets.json', 'w') as file:
    json.dump(adjusted_schema, file, indent=2)

print("Schema adjustment completed. Check 'adjusted_openapi_schema.json'.")