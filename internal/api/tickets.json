{
  "openapi": "3.0.3",
  "info": {
    "title": "Ent Schema API",
    "description": "This is an auto generated API description made out of an Ent schema definition",
    "version": "0.1.0"
  },
  "paths": {
    "/tickets": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "summary": "List Tickets",
        "description": "List Tickets.",
        "operationId": "listTicket",
        "parameters": [
          {
            "name": "status[]",
            "in": "query",
            "description": "ticket status to filter on",
            "explode": true,
            "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/status"
                }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "what page to render",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "itemsPerPage",
            "in": "query",
            "description": "item count to render per page",
            "schema": {
              "type": "integer",
              "maximum": 255,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "result Ticket list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ticket"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/resp400"
          },
          "404": {
            "$ref": "#/components/responses/resp404"
          },
          "409": {
            "$ref": "#/components/responses/resp409"
          },
          "500": {
            "$ref": "#/components/responses/resp500"
          }
        }
      },
      "post": {
        "tags": [
          "Ticket"
        ],
        "summary": "Create a new Ticket",
        "description": "Creates a new Ticket and persists it to storage.",
        "operationId": "createTicket",
        "requestBody": {
          "description": "Ticket to create",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "assignee": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "not_started",
                      "in_progress",
                      "done"
                    ],
                    "default": "not_started"
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "low",
                      "medium",
                      "high"
                    ],
                    "default": "low"
                  },
                  "thread_id": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_by": {
                    "type": "string"
                  },
                  "updated_by": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "status",
                  "priority",
                  "thread_id",
                  "created_at",
                  "updated_at",
                  "created_by",
                  "updated_by"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ticket created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/resp400"
          },
          "409": {
            "$ref": "#/components/responses/resp409"
          },
          "500": {
            "$ref": "#/components/responses/resp500"
          }
        }
      }
    },
    "/tickets/{id}": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "summary": "Find a Ticket by ID",
        "description": "Finds the Ticket with the requested ID and returns it.",
        "operationId": "readTicket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Ticket",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ticket with requested ID was found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/resp400"
          },
          "404": {
            "$ref": "#/components/responses/resp404"
          },
          "409": {
            "$ref": "#/components/responses/resp409"
          },
          "500": {
            "$ref": "#/components/responses/resp500"
          }
        }
      },
      "delete": {
        "tags": [
          "Ticket"
        ],
        "summary": "Deletes a Ticket by ID",
        "description": "Deletes the Ticket with the requested ID.",
        "operationId": "deleteTicket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Ticket",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Ticket with requested ID was deleted"
          },
          "400": {
            "$ref": "#/components/responses/resp400"
          },
          "404": {
            "$ref": "#/components/responses/resp404"
          },
          "409": {
            "$ref": "#/components/responses/resp409"
          },
          "500": {
            "$ref": "#/components/responses/resp500"
          }
        }
      },
      "patch": {
        "tags": [
          "Ticket"
        ],
        "summary": "Updates a Ticket",
        "description": "Updates a Ticket and persists changes to storage.",
        "operationId": "updateTicket",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Ticket",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Ticket properties to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "assignee": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "not_started",
                      "in_progress",
                      "done"
                    ]
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "low",
                      "medium",
                      "high"
                    ]
                  },
                  "thread_id": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "created_by": {
                    "type": "string"
                  },
                  "updated_by": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ticket updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/resp400"
          },
          "404": {
            "$ref": "#/components/responses/resp404"
          },
          "409": {
            "$ref": "#/components/responses/resp409"
          },
          "500": {
            "$ref": "#/components/responses/resp500"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "status": {
        "type": "string",
        "enum": ["in_progress","done","not_started"]
      },
      "Ticket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "assignee": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "not_started",
              "in_progress",
              "done"
            ],
            "default": "not_started"
          },
          "priority": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "default": "low"
          },
          "thread_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_by": {
            "type": "string"
          },
          "updated_by": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "status",
          "priority",
          "thread_id",
          "created_at",
          "updated_at",
          "created_by",
          "updated_by"
        ]
      }
    },
    "responses": {
      "resp400": {
        "description": "invalid input, data invalid",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "resp403": {
        "description": "insufficient permissions",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "resp404": {
        "description": "resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "resp409": {
        "description": "conflicting resources",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      },
      "resp500": {
        "description": "unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "status": {
                  "type": "string"
                },
                "errors": {}
              },
              "required": [
                "code",
                "status"
              ]
            }
          }
        }
      }
    }
  }
}